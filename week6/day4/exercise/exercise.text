-- Database: hr.backup

-- DROP DATABASE "hr.backup";

-- CREATE DATABASE "hr.backup"
--     WITH 
--     OWNER = postgres
--     ENCODING = 'UTF8'
--     LC_COLLATE = 'Hebrew_Israel.1255'
--     LC_CTYPE = 'Hebrew_Israel.1255'
--     TABLESPACE = pg_default
--     CONNECTION LIMIT = -1;

-- Write a query to display the names (first_name, last_name) using an alias name “First Name”, “Last Name” from the employee table.
-- select first_name FirstName, last_name LastName from employees

-- Write a query to get unique departments ID from the employee table (ie. without duplicates).
-- select distinct department_id from employees

-- Write a query to get the details of all employees from the employee table, do so in descending order by first name.
-- select * from employees order by first_name desc;

-- Write a query to get the names (first_name, last_name), salary and 15% of salary as PF (ie. alias) for all the employees.
-- select first_name, last_name, salary, salary*0.15 pf from employees	

-- Write a query to get the employee IDs, names (first_name, last_name) and salary in ascending order according to their salary.
-- select employee_id, first_name last_name, salary from employees order by salary

-- Write a query to get the total sum of all salaries paid to the employees.
-- select sum(salary) from employees

-- Write a query to get the maximum and minimum salaries paid to the employees.
-- select max(salary), min(salary) from employees

-- Write a query to get the average salary paid to the employees.
-- select round(avg(salary)) from employees

-- Write a query to get the number of employees working in the company.
-- select count(*) from employees

-- Write a query to get all the first names from the employees table in upper case.
-- select upper(first_name) from employees

-- Write a query to get the first three characters of each first name of all the employees in the employees table.
-- select substring(first_name, 1, 3) from employees

-- Write a query to get the full names of all the employees in the employees table. You have to include the first name and last name.
-- select concat(first_name, ' ', last_name) fullname from employees

-- Write a query to get the first name, last name and the length of the full name of all the employees from the employees table.
-- select first_name, last_name, length(concat(first_name, last_name)) from employees

-- Write a query to check whether the first_name column of the employees table contains any numbers.
-- select first_name from employees where first_name ilike '%[0-9]%'

-- Write a query to select the first ten records from a table.
-- select * from employees limit 10

-- Write a query to display the first_name, last_name and salary of all employees whose salary is between $10,000 and $15,000.
-- select first_name, last_name, salary from employees where salary between 10000 and 15000

-- Write a query to display the first_name, last_name and hire date of all employees who were hired in 1987.
-- select first_name, last_name, hire_date from employees where hire_date between '1987-01-01' and '1987-12-31' 

-- Write a query to get the all employees whose first_name has both the letters ‘c’ and ‘e’.
-- select * from employees where first_name ilike '%c%' and first_name ilike '%e%'

-- Write a query to display the last_name, job, and salary of all the employees who don’t work as Programmers or Shipping Clerks, and who don’t receive a salary equal to $4,500, $10,000, or $15,000.
-- select last_name, job_title, salary from employees e
-- inner join jobs j
-- on j.job_id = e.job_id 
-- where (job_title != 'Programmer' and job_title != 'Shipping Clerk') and (salary != 4500 and salary != 10000 and salary != 15000) 

-- Write a query to display the last names of all employees whose last name contains exactly six characters
-- select last_name from employees where length(last_name) = 6

-- Write a query to display the last name of all employees who have the letter ‘e’ as the third character in the name
-- select last_name from employees where last_name ilike '__e%'

-- Write a query to display the jobs/designations available in the employees table.
-- select distinct job_title from jobs j
-- left join employees e
-- on j.job_id = e.job_id
-- where j.job_id not in (select e.job_id from employees)

-- Write a query to select all information of employees whose last name is either ‘JONES’ or ‘BLAKE’ or ‘SCOTT’ or ‘KING’ or ‘FORD’.
-- select * from employees e 
-- inner join jobs j
-- on j.job_id = e.job_id
-- inner join dependents dn
-- on e.employee_id = dn.employee_id
-- inner join departments dr
-- on e.department_id = dr.department_id
-- inner join locations l
-- on dr.location_id = l.location_id
-- inner join countries c
-- on c.country_id = l.country_id
-- inner join regions r
-- on c.region_id = r.region_id
-- where e.last_name ilike 'JONES' or e.last_name ilike 'BLAKE' or e.last_name ilike 'SCOTT' or e.last_name ilike 'KING' or e.last_name ilike 'FORD'

