-- Database: bootcamp

-- DROP DATABASE bootcamp;

-- CREATE DATABASE bootcamp
--     WITH 
--     OWNER = postgres
--     ENCODING = 'UTF8'
--     LC_COLLATE = 'Hebrew_Israel.1255'
--     LC_CTYPE = 'Hebrew_Israel.1255'
--     TABLESPACE = pg_default
--     CONNECTION LIMIT = -1;

-- create table customer (
-- 	customer_id serial PRIMARY KEY,
-- 	name varchar(100) 
-- )

-- insert into customer (name)
-- values('benji alex'),
-- ('')


-- create table customer_profile (
-- 	customer_id integer unique REFERENCES customer (customer_id),
-- 	name varchar(100),
-- 	addres varchar(100)
-- )
-- select * from customer_profile
-- insert into customer_profile (customer_id, name, addres)
-- values(
-- 	(select customer_id from customer where name = 'benji alex'),
-- 	'benji alex',
-- 	'israel'
-- )

-- select * from customer c
-- inner join customer_profile cp
-- on c.customer_id = cp.customer_id

-- select * from customer c
-- left join customer_profile cp
-- on c.customer_id = cp.customer_id

-- select * from customer c
-- right join customer_profile cp
-- on c.customer_id = cp.customer_id

-- select * from customer c
-- full join customer_profile cp
-- on c.customer_id = cp.customer_id

-- create table product (
-- 	product_id serial PRIMARY KEY,
-- 	name varchar(100)
-- )

-- create table orders (
-- 	product_id integer REFERENCES product (product_id),
-- 	customer_id integer REFERENCES customer (customer_id)
-- )
-- select * from product
-- insert into product (name)
-- values ('doritos'),
-- ('bisli'),
-- ('bamba')
-- insert into orders (product_id, customer_id)
-- values (
-- (select product_id from product where name = 'bisli'),
-- (select customer_id from customer where name = 'benji alex')
-- )

-- select * from customer c
-- inner join orders o
-- on c.customer_id = o.customer_id
-- inner join product p
-- on p.product_id = o.product_id

-- select * from customer c
-- inner join orders o
-- on c.customer_id = o.customer_id
-- full join product p
-- on p.product_id = o.product_id

-- select * from customer c
-- left join orders o
-- on c.customer_id = o.customer_id
-- right join product p
-- on p.product_id = o.product_id